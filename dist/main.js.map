{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/character/character.component.html","webpack:///./src/app/components/character/character.component.ts","webpack:///./src/app/components/planet/planet.component.html","webpack:///./src/app/components/planet/planet.component.ts","webpack:///./src/app/components/search-form/search-form.component.html","webpack:///./src/app/components/search-form/search-form.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n\\n      <h1>The Star Wars Search</h1>\\n      <br>\\n\\n      <app-search-form></app-search-form>\\n      <br>\\n\\n      <div *ngIf=\\\"isLoading\\\">Loading...</div>\\n\\n      <div *ngIf=\\\"isNotFound(searchResult, isLoading)\\\">Not found.</div>\\n\\n      <div *ngIf=\\\"!isLoading\\\">\\n        <div *ngIf=\\\"searchType === 'people'\\\">\\n          <div *ngFor=\\\"let character of searchResult\\\">\\n            <app-character [character]=\\\"character\\\"></app-character>\\n            <br>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"searchType === 'planets'\\\">\\n          <div *ngFor=\\\"let planet of searchResult\\\">\\n            <app-planet [planet]=\\\"planet\\\"></app-planet>\\n            <br>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ApiService} from './services/api.service';\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  searchType: string;\n  searchResult: any[];\n  isLoading: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      const {searchType, query} = params;\n      if (searchType && query) {\n        this.isLoading = true;\n        this.searchType = searchType;\n        this.apiService.search(searchType, query).subscribe(response => {\n          this.searchResult = response.results;\n          this.isLoading = false;\n        });\n      }\n    });\n  }\n\n  isNotFound(searchResult: any[], isLoading: boolean) {\n    return searchResult && !searchResult.length && !isLoading;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutesModule } from './app.routes';\n\nimport { AppComponent } from './app.component';\nimport { SearchFormComponent } from './components/search-form/search-form.component';\nimport { CharacterComponent } from './components/character/character.component';\nimport {ApiService} from './services/api.service';\nimport { PlanetComponent } from './components/planet/planet.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchFormComponent,\n    CharacterComponent,\n    PlanetComponent\n  ],\n  imports: [\n    AppRoutesModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    ApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '**',\n    component: AppComponent,\n  },\n];\n\nexport const AppRoutesModule = RouterModule.forRoot(routes);\n","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h6 class=\\\"card-subtitle mb-2 text-muted\\\" id=\\\"character-name\\\">{{character.name}}</h6>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\" id=\\\"gender\\\">Gender:</div>\\n      <div class=\\\"col-sm-10\\\" id=\\\"gender-value\\\">\\n        {{character.gender}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\" id=\\\"birth-year\\\">Birth year:</div>\\n      <div class=\\\"col-sm-10\\\" id=\\\"birth-year-value\\\">\\n        {{character.birth_year}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\" id=\\\"eye-color\\\">Eye color:</div>\\n      <div class=\\\"col-sm-10\\\" id=\\\"eye-color-value\\\">\\n        {{character.eye_color}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\" id=\\\"skin-color\\\">Skin color:</div>\\n      <div class=\\\"col-sm-10\\\" id=\\\"skin-color-value\\\">\\n        {{character.skin_color}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-character',\n  templateUrl: './character.component.html',\n})\nexport class CharacterComponent {\n  @Input() character;\n}\n","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{planet.name}}</h6>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\" id=\\\"population\\\">Population:</div>\\n      <div class=\\\"col-sm-10\\\" id=\\\"population-value\\\">\\n        {{planet.population}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\" id=\\\"climate\\\">Climate:</div>\\n      <div class=\\\"col-sm-10\\\" id=\\\"climate-value\\\">\\n        {{planet.climate}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\" id=\\\"gravity\\\">Gravity:</div>\\n      <div class=\\\"col-sm-10\\\" id=\\\"gavity-value\\\">\\n        {{planet.gravity}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-planet',\n  templateUrl: './planet.component.html',\n})\nexport class PlanetComponent {\n  @Input() planet;\n}\n","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"search()\\\">\\n      <div class=\\\"form-row align-items-center\\\">\\n\\n        <div class=\\\"col-auto\\\">\\n          <div class=\\\"form-check mb-2\\\">\\n            <input formControlName=\\\"searchType\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"people\\\" value=\\\"people\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"people\\\">\\n              People\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-auto\\\">\\n          <div class=\\\"form-check mb-2\\\">\\n            <input formControlName=\\\"searchType\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"planets\\\" value=\\\"planets\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"planets\\\">\\n              Planets\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-auto\\\">\\n          <label class=\\\"sr-only\\\" for=\\\"query\\\">Query</label>\\n          <input formControlName=\\\"query\\\" type=\\\"search\\\" class=\\\"form-control mb-2\\\" id=\\\"query\\\">\\n        </div>\\n\\n        <div class=\\\"col-auto\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2\\\">Search</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n})\nexport class SearchFormComponent implements OnInit {\n\n  searchForm: FormGroup;\n  defaultSearchType = 'people';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.searchForm = this.formBuilder.group({\n      searchType: [ this.defaultSearchType ],\n      query: [ '', [Validators.required] ],\n    });\n\n    this.activatedRoute.queryParams.subscribe(params => {\n      const {searchType, query}  = params;\n      this.searchForm.setValue({\n        searchType: searchType || this.defaultSearchType,\n        query: query || '',\n      });\n    });\n  }\n\n  search(): void {\n    const {searchType, query} = this.searchForm.value;\n    if (this.searchForm.valid) {\n      this.router.navigate([], {\n        queryParams: {\n          searchType,\n          query,\n        },\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst baseUrl = 'https://swapi.dev/api/';\n\n@Injectable()\nexport class ApiService {\n\n  constructor(\n    private httpClient: HttpClient\n  ) {}\n\n  search(searchType, query): Observable<any> {\n    const params = new HttpParams()\n      .set('search', query);\n\n    return this.httpClient\n      .get(\n        `${baseUrl}${searchType}/`,\n        {params}\n      );\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}